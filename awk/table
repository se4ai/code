#!/usr/bin/env ./gold
# vim: nospell filetype=awk ts=2 sw=2 sts=2  et :

#--------- --------- --------- --------- --------- ---------
BEGIN  {
  SKIPCOL = "\\?"
  IGNORE  = SKIPCOL
  NUMCOL  = "\\$"
  SEP     = ","
}
BEGIN { _demo("weather.csv") }
function _demo(f,  i,j) { 
  Num(i)
  for(j=1;j<=100;j++) Num1(i,j)
  oo(i,"num")
  print(i.sd)
  #file2table(i,f) 
}
#------------------------------------------------------------
function Row(i,t,lst,     what,val) {
  Object(i)
  has(i,"cells")
  i.dom = 0
  for(c in t.names) {
    what = c in t.nums? "Num1" : "Sym1"
    val  = lst[c] 
    i.cells[c] = val ~ SKIP ? val : @what(i.cols[c], val) }
}
#------------------------------------------------------------
function Table(i) { 
  Object(i)
  has(i,"nums")
  has(i,"syms")
  has(i,"cols")
  has(i,"rows") 
}
function file2table(i,f,  r,c,line,lst) {
  Table(i)
  f = f ? f : "-"
  while((getline line < f) > 0) {
    split(line,lst,SEP)
    if (++r==1) 
      for(c in lst)
        if (lst[c] !~ SKIPCOL) 
          TableHeader(i, c, lst[c])
    else  
      has2(i.rows,r,"Row",i,lst)  }
} 
function TableHeader(i,c,v) {
  if (v ~ NUMCOL) { i.nums[c]; has1(i.cols,c,"Num",c,v) }
  else            { i.syms[c]; has1(i.cols,c,"Sym",c,v) }
}
#------------------------------------------------------------
function Col(i,c,v) { 
  Object(i)   
  i.n=0
  i.col=c
  i.txt=v 
} 
#------------------------------------------------------------
function Sym(i,c,v) { 
  Col(i,c,v)
  i.mode=""
  i.most=0
  has(i,"cnt") 
}
function Sym1(i,c,v) {
  if (v ~ IGNORE) return v
  i.n++
  tmp = ++i.cnt[v]
  if (tmp > i.most) {
    i.most = tmp
    i.mode = v }
  return v
}
#------------------------------------------------------------
function Num(i,c,v) {
  Col(i,c,v)
  i.n  = i.mu = i.m2 = i.sd = 0
  i.lo = 10^32 
  i.hi = -1*i.lo
}
function Num1(i,v,    d) {
  v += 0
  if (v ~ IGNORE) return v
  i.n++
  i.lo  = v < i.lo ? v : i.lo
  i.hi  = v > i.hi ? v : i.hi
  d     = v - i.mu
  i.mu += d/i.n
  i.m2 += d*(v - i.mu)
  i.sd  = i.n < 2 ? 0 : (i.m2/(i.n - 1))^0.5
  return v
}
